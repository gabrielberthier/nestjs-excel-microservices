{
  "manifest": {
    "name": "globals",
    "version": "15.14.0",
    "description": "Global identifiers from different JavaScript environments",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/globals.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "sideEffects": false,
    "engines": {
      "node": ">=18"
    },
    "scripts": {
      "test": "npm run build && xo && ava && tsd",
      "prepare": "npm run build",
      "update": "node scripts/update.mjs",
      "update:browser": "node scripts/update.mjs --environment=browser",
      "update:builtin": "node scripts/update.mjs --environment=builtin",
      "update:nodeBuiltin": "node scripts/update.mjs --environment=nodeBuiltin",
      "update:worker": "node scripts/update.mjs --environment=worker",
      "update:shelljs": "node scripts/update.mjs --environment=shelljs",
      "update:jest": "node scripts/update.mjs --environment=jest",
      "update:vitest": "node scripts/update.mjs --environment=vitest",
      "build": "run-s build:data build:types",
      "build:data": "node scripts/generate-data.mjs",
      "build:types": "node scripts/generate-types.mjs"
    },
    "files": [
      "index.js",
      "index.d.ts",
      "globals.json"
    ],
    "keywords": [
      "globals",
      "global",
      "identifiers",
      "variables",
      "vars",
      "jshint",
      "eslint",
      "environments"
    ],
    "devDependencies": {
      "@vitest/eslint-plugin": "^1.1.18",
      "ava": "^6.1.3",
      "cheerio": "^1.0.0-rc.12",
      "eslint-plugin-jest": "^28.8.3",
      "execa": "^9.4.0",
      "get-port": "^7.1.0",
      "npm-run-all2": "^6.2.3",
      "outdent": "^0.8.0",
      "puppeteer": "^23.4.1",
      "shelljs": "^0.8.5",
      "tsd": "^0.31.2",
      "type-fest": "^4.26.1",
      "xo": "^0.59.3"
    },
    "xo": {
      "rules": {
        "unicorn/prefer-module": "off"
      },
      "overrides": [
        {
          "files": [
            "data/*.mjs"
          ],
          "rules": {
            "import/no-anonymous-default-export": "off",
            "camelcase": "off",
            "unicorn/filename-case": [
              "error",
              {
                "cases": {
                  "camelCase": true,
                  "kebabCase": true
                }
              }
            ]
          }
        },
        {
          "files": [
            "scripts/*.mjs"
          ],
          "rules": {
            "n/no-unsupported-features/node-builtins": "off"
          }
        }
      ]
    },
    "tsd": {
      "compilerOptions": {
        "resolveJsonModule": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-globals-15.14.0-b8fd3a8941ff3b4d38f3319d433b61bbb482e73f-integrity/node_modules/globals/package.json",
    "readmeFilename": "readme.md",
    "readme": "# globals\n\n> Global identifiers from different JavaScript environments\n\nIt's just a [JSON file](globals.json), so you can use it in any environment.\n\nThis package is used by ESLint 8 and earlier. For ESLint 9 and later, you should depend on this package directly in [your ESLint config](https://eslint.org/docs/latest/use/configure/language-options#predefined-global-variables).\n\n## Install\n\n```sh\nnpm install globals\n```\n\n## Usage\n\n```js\nimport globals from 'globals';\n\nconsole.log(globals.browser);\n/*\n{\n\taddEventListener: false,\n\tapplicationCache: false,\n\tArrayBuffer: false,\n\tatob: false,\n\tâ€¦\n}\n*/\n```\n\nEach global is given a value of `true` or `false`. A value of `true` indicates that the variable may be overwritten. A value of `false` indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be `false` unless we hear otherwise.\n\nFor Node.js this package provides two sets of globals:\n\n- `globals.nodeBuiltin`: Globals available to all code running in Node.js.\n\tThese will usually be available as properties on the `globalThis` object and include `process`, `Buffer`, but not CommonJS arguments like `require`.\n\tSee: https://nodejs.org/api/globals.html\n- `globals.node`: A combination of the globals from `nodeBuiltin` plus all CommonJS arguments (\"CommonJS module scope\").\n\tSee: https://nodejs.org/api/modules.html#modules_the_module_scope\n\nWhen analyzing code that is known to run outside of a CommonJS wrapper, for example, JavaScript modules, `nodeBuiltin` can find accidental CommonJS references.\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/globals/-/globals-15.14.0.tgz#b8fd3a8941ff3b4d38f3319d433b61bbb482e73f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/globals/-/globals-15.14.0.tgz",
    "hash": "b8fd3a8941ff3b4d38f3319d433b61bbb482e73f",
    "integrity": "sha512-OkToC372DtlQeje9/zHIo5CT8lRP/FUgEOKBEhU4e0abL7J7CD24fD9ohiLN5hagG/kWCYj4K5oaxxtj2Z0Dig==",
    "registry": "npm",
    "packageName": "globals",
    "cacheIntegrity": "sha512-OkToC372DtlQeje9/zHIo5CT8lRP/FUgEOKBEhU4e0abL7J7CD24fD9ohiLN5hagG/kWCYj4K5oaxxtj2Z0Dig== sha1-uP06iUH/O0048zGdQzthu7SC5z8="
  },
  "registry": "npm",
  "hash": "b8fd3a8941ff3b4d38f3319d433b61bbb482e73f"
}
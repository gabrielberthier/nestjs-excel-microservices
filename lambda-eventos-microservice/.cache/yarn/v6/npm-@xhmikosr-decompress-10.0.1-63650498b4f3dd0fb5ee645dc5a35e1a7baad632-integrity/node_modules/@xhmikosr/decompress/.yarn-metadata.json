{
  "manifest": {
    "name": "@xhmikosr/decompress",
    "version": "10.0.1",
    "description": "Extracting archives made easy",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/XhmikosR/decompress.git"
    },
    "publishConfig": {
      "access": "public"
    },
    "author": {
      "name": "Kevin Mårtensson",
      "email": "kevinmartensson@gmail.com",
      "url": "https://github.com/kevva"
    },
    "engines": {
      "node": ">=18"
    },
    "scripts": {
      "ava": "ava",
      "lint": "xo",
      "xo": "xo",
      "fix": "xo --fix",
      "test": "npm run xo && npm run ava",
      "test-ci": "c8 ava"
    },
    "main": "index.js",
    "type": "module",
    "exports": {
      ".": "./index.js"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "bz2",
      "bzip2",
      "decompress",
      "extract",
      "tar",
      "tar.bz",
      "tar.gz",
      "zip",
      "unzip"
    ],
    "dependencies": {
      "@xhmikosr/decompress-tar": "^8.0.1",
      "@xhmikosr/decompress-tarbz2": "^8.0.1",
      "@xhmikosr/decompress-targz": "^8.0.1",
      "@xhmikosr/decompress-unzip": "^7.0.0",
      "graceful-fs": "^4.2.11",
      "make-dir": "^4.0.0",
      "strip-dirs": "^3.0.0"
    },
    "devDependencies": {
      "ava": "^6.1.2",
      "c8": "^9.1.0",
      "is-jpg": "^3.0.0",
      "path-exists": "^5.0.0",
      "xo": "^0.58.0"
    },
    "xo": {
      "rules": {
        "unicorn/prevent-abbreviations": "off"
      }
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-@xhmikosr-decompress-10.0.1-63650498b4f3dd0fb5ee645dc5a35e1a7baad632-integrity/node_modules/@xhmikosr/decompress/package.json",
    "readmeFilename": "readme.md",
    "readme": "# decompress [![CI](https://github.com/XhmikosR/decompress/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/XhmikosR/decompress/actions/workflows/ci.yml)\n\n> Extracting archives made easy\n\n*See [decompress-cli](https://github.com/kevva/decompress-cli) for the command-line version.*\n\n## Install\n\n```sh\nnpm install @xhmikosr/decompress\n```\n\n\n## Usage\n\n```js\nimport decompress from '@xhmikosr/decompress';\n\ndecompress('unicorn.zip', 'dist').then(files => {\n\tconsole.log('done!');\n});\n```\n\n\n## API\n\n### decompress(input, [output], [options])\n\nReturns a Promise for an array of files in the following format:\n\n```js\n{\n\tdata: Buffer,\n\tmode: Number,\n\tmtime: String,\n\tpath: String,\n\ttype: String\n}\n```\n\n#### input\n\nType: `string` `Buffer`\n\nFile to decompress.\n\n#### output\n\nType: `string`\n\nOutput directory.\n\n#### options\n\n##### filter\n\nType: `Function`\n\nFilter out files before extracting. E.g:\n\n```js\ndecompress('unicorn.zip', 'dist', {\n\tfilter: file => path.extname(file.path) !== '.exe'\n}).then(files => {\n\tconsole.log('done!');\n});\n```\n\n*Note that in the current implementation, **`filter` is only applied after fully reading all files from the archive in memory**. Do not rely on this option to limit the amount of memory used by `decompress` to the size of the files included by `filter`. `decompress` will read the entire compressed file into memory regardless.*\n\n##### map\n\nType: `Function`\n\nMap files before extracting: E.g:\n\n```js\ndecompress('unicorn.zip', 'dist', {\n\tmap: file => {\n\t\tfile.path = `unicorn-${file.path}`;\n\t\treturn file;\n\t}\n}).then(files => {\n\tconsole.log('done!');\n});\n```\n\n##### plugins\n\n* Type: `Array`\n* Default: `[decompressTar(), decompressTarbz2(), decompressTargz(), decompressUnzip()]`\n\nArray of [plugins](https://www.npmjs.com/browse/keyword/decompressplugin) to use.\n\n##### strip\n\n* Type: `number`\n* Default: `0`\n\nRemove leading directory components from extracted files.\n\n\n## License\n\nMIT © [Kevin Mårtensson](https://github.com/kevva)\n",
    "licenseText": "MIT License\n\nCopyright (c) Kevin Mårtensson <kevinmartensson@gmail.com> (github.com/kevva)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@xhmikosr/decompress/-/decompress-10.0.1.tgz#63650498b4f3dd0fb5ee645dc5a35e1a7baad632",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@xhmikosr/decompress/-/decompress-10.0.1.tgz",
    "hash": "63650498b4f3dd0fb5ee645dc5a35e1a7baad632",
    "integrity": "sha512-6uHnEEt5jv9ro0CDzqWlFgPycdE+H+kbJnwyxgZregIMLQ7unQSCNVsYG255FoqU8cP46DyggI7F7LohzEl8Ag==",
    "registry": "npm",
    "packageName": "@xhmikosr/decompress",
    "cacheIntegrity": "sha512-6uHnEEt5jv9ro0CDzqWlFgPycdE+H+kbJnwyxgZregIMLQ7unQSCNVsYG255FoqU8cP46DyggI7F7LohzEl8Ag== sha1-Y2UEmLTz3Q+17mRdxaNeGnuq1jI="
  },
  "registry": "npm",
  "hash": "63650498b4f3dd0fb5ee645dc5a35e1a7baad632"
}
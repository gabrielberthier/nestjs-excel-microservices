{
  "manifest": {
    "name": "@sec-ant/readable-stream",
    "description": "A tiny, zero-dependency yet spec-compliant asynchronous iterator polyfill/ponyfill for ReadableStreams.",
    "private": false,
    "version": "0.4.1",
    "type": "module",
    "files": [
      "./dist"
    ],
    "main": "./dist/index/index.js",
    "module": "./dist/index/index.js",
    "exports": {
      ".": "./dist/index/index.js",
      "./asyncIterator": "./dist/index/asyncIterator.js",
      "./fromAnyIterable": "./dist/index/fromAnyIterable.js",
      "./ponyfill": "./dist/ponyfill/index.js",
      "./ponyfill/asyncIterator": "./dist/ponyfill/asyncIterator.js",
      "./ponyfill/fromAnyIterable": "./dist/ponyfill/fromAnyIterable.js",
      "./polyfill": "./dist/polyfill/index.js",
      "./polyfill/asyncIterator": "./dist/polyfill/asyncIterator.js",
      "./polyfill/fromAnyIterable": "./dist/polyfill/fromAnyIterable.js",
      "./async-iterator": {
        "types": "./dist/types/async-iterator.d.ts"
      }
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Sec-ant/readable-stream.git"
    },
    "homepage": "https://github.com/Sec-ant/readable-stream",
    "bugs": {
      "url": "https://github.com/Sec-ant/readable-stream/issues",
      "email": "zezhengwu@proton.me"
    },
    "keywords": [
      "stream",
      "web-streams",
      "readablestream",
      "async",
      "asynchronous",
      "iterator",
      "iteration",
      "async-iterator",
      "polyfill",
      "esm",
      "from-iterable"
    ],
    "author": {
      "name": "Ze-Zheng Wu"
    },
    "license": "MIT",
    "publishConfig": {
      "access": "public"
    },
    "scripts": {
      "install:ci": "npm ci && npx playwright install --with-deps",
      "install:codesandbox": "npm ci && ./scripts/prepare.sh",
      "update-hooks": "simple-git-hooks",
      "changeset": "changeset",
      "bump": "changeset version 2>/dev/null | grep . && npm i; exit 0",
      "type-check": "tsc --noEmit --emitDeclarationOnly false",
      "format:prettier": "prettier . --write",
      "format:biome": "biome format . --write",
      "format": "conc \"npm:format:prettier\" \"npm:format:biome\"",
      "check:biome": "biome check --apply .",
      "check": "conc \"npm:format:prettier\" \"npm:check:biome\"",
      "prebuild": "npm run check && npm run type-check",
      "build": "vite build",
      "copy": "copy-files-from-to",
      "postbuild": "tsc && npm run copy",
      "test:chromium": "vitest run --browser.name=chromium",
      "test:firefox": "vitest run --browser.name=firefox",
      "test": "npm run test:chromium && npm run test:firefox",
      "test:coverage": "vitest run --coverage",
      "test:ui": "vitest --ui --coverage",
      "prepublishOnly": "npm run build",
      "bump-biome:latest": "npm i -DE @biomejs/biome@latest",
      "bump-biome:nightly": "npm i -DE @biomejs/biome@nightly"
    },
    "devDependencies": {
      "@biomejs/biome": "1.6.1",
      "@changesets/cli": "^2.27.1",
      "@commitlint/cli": "^19.1.0",
      "@commitlint/config-conventional": "^19.1.0",
      "@vitest/browser": "^1.3.1",
      "@vitest/coverage-istanbul": "^1.3.1",
      "@vitest/ui": "^1.3.1",
      "concurrently": "^8.2.2",
      "copy-files-from-to": "^3.9.1",
      "lint-staged": "^15.2.2",
      "playwright": "^1.42.1",
      "prettier": "^3.2.5",
      "simple-git-hooks": "^2.10.0",
      "typescript": "^5.4.2",
      "vite": "^5.1.6",
      "vitest": "^1.3.1"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-@sec-ant-readable-stream-0.4.1-60de891bb126abfdc5410fdc6166aca065f10a0c-integrity/node_modules/@sec-ant/readable-stream/package.json",
    "readmeFilename": "README.md",
    "readme": "# @sec-ant/readable-stream\n\n[![npm version](https://img.shields.io/npm/v/@sec-ant/readable-stream?cacheSeconds=300)](https://www.npmjs.com/package/@sec-ant/readable-stream/v/latest) [![npm downloads](https://img.shields.io/npm/dm/@sec-ant/readable-stream?cacheSeconds=300)](https://www.npmjs.com/package/@sec-ant/readable-stream/v/latest) [![](https://img.shields.io/jsdelivr/npm/hm/@sec-ant/readable-stream?cacheSeconds=300&color=ff5627)](https://www.jsdelivr.com/package/npm/@sec-ant/readable-stream) [![bundlephobia minzipped](https://img.shields.io/bundlephobia/minzip/@sec-ant/readable-stream?cacheSeconds=300)](https://bundlephobia.com/package/@sec-ant/readable-stream@latest) [![npm license](https://img.shields.io/npm/l/@sec-ant/readable-stream?cacheSeconds=300)](https://www.npmjs.com/package/@sec-ant/readable-stream/v/latest)\n\nA tiny, zero-dependency yet spec-compliant asynchronous iterator polyfill/ponyfill for [`ReadableStream`](https://developer.mozilla.org/docs/Web/API/ReadableStream)s.\n\n## Features\n\n### Asynchronously iterate a `ReadableStream`\n\nWith this package, you can consume a `ReadableStream` as an `AsyncIterable`.\n\n- spec: https://streams.spec.whatwg.org/#rs-asynciterator\n- tests: https://github.com/Sec-ant/readable-stream/blob/main/tests/asyncIterator.spec.ts (copied from [wpt](https://github.com/web-platform-tests/wpt/blob/309231a7f3e900d04914bc4963b016efd9989a00/streams/readable-streams/async-iterator.any.js))\n\n### Convert an `AsyncIterable` or an `Iterable` into a `ReadableStream`\n\nWith this package, you can construct a `ReadableStream` from an `AsyncIterable` or an `Iterable`.\n\n- spec: https://streams.spec.whatwg.org/#rs-from\n- tests: https://github.com/Sec-ant/readable-stream/blob/main/tests/fromAnyIterable.spec.ts (copied from [wpt](https://github.com/web-platform-tests/wpt/blob/309231a7f3e900d04914bc4963b016efd9989a00/streams/readable-streams/from.any.js))\n\nThis package passes all the aforementioned tests.\n\n## Install\n\n```bash\nnpm i @sec-ant/readable-stream\n```\n\n## Usage\n\n### Ponyfill\n\nThis package can be imported as a _ponyfill_ to avoid side effects:\n\n#### `asyncIterator`\n\nPath:\n\n```\n@sec-ant/readable-stream/ponyfill/asyncIterator\n```\n\nExample:\n\n```ts\nimport {\n  asyncIterator,\n  type ReadableStreamIteratorOptions,\n} from \"@sec-ant/readable-stream/ponyfill/asyncIterator\";\n\nconst readableStream = (await fetch(\"https://www.example.org/\")).body;\n\nlet total = 0;\nfor await (const chunk of asyncIterator.call(readableStream)) {\n  total += chunk.length;\n}\n\nconsole.log(total);\n```\n\nCheck https://streams.spec.whatwg.org/#rs-class-definition and https://streams.spec.whatwg.org/#rs-asynciterator for further explanation on `ReadableStreamIteratorOptions`.\n\n#### `fromAnyIterable`\n\nPath:\n\n```\n@sec-ant/readable-stream/ponyfill/fromAnyIterable\n```\n\nExample:\n\n```ts\nimport { fromAnyIterable } from \"@sec-ant/readable-stream/ponyfill/fromAnyIterable\";\n\nconst readableStream = fromAnyIterable([\"a\", \"b\"]);\n```\n\n#### All-in-One\n\nPath:\n\n```\n@sec-ant/readable-stream/ponyfill\n```\n\nExample:\n\n```ts\nimport {\n  fromAnyIterable,\n  asyncIterator,\n  type ReadableStreamIteratorOptions,\n} from \"@sec-ant/readable-stream/ponyfill\";\n```\n\n### Polyfill\n\nThis package can be imported as a drop-in _polyfill_ with side effects.\n\n#### `ReadableStream.prototype[Symbol.asyncIterator]` and `ReadableStream.prototype.values`\n\nPath:\n\n```\n@sec-ant/readable-stream/polyfill/asyncIterator\n```\n\nExample:\n\n```ts\nimport \"@sec-ant/readable-stream/polyfill/asyncIterator\";\n\nconst readableStream = (await fetch(\"https://www.example.org/\")).body;\n\nlet total = 0;\nfor await (const chunk of readableStream) {\n  total += chunk.length;\n}\n\nconsole.log(total);\n```\n\n#### `ReadableStream.from`\n\nPath:\n\n```\n@sec-ant/readable-stream/polyfill/fromAnyIterable\n```\n\nExample:\n\n```js\nimport \"@sec-ant/readable-stream/polyfill/fromAnyIterable\";\n\nconst readableStream = ReadableStream.from([\"a\", \"b\"]);\n```\n\nNote that `ReadableStream.from` is not typed because [declared vars cannot be overridden](https://github.com/microsoft/TypeScript/issues/36146).\n\n#### All-in-One\n\nPath:\n\n```\n@sec-ant/readable-stream/polyfill\n```\n\nExample:\n\n```ts\nimport \"@sec-ant/readable-stream/polyfill\";\n```\n\n### Ponyfill + Polyfill\n\n#### `asyncIterator`\n\nPath:\n\n```\n@sec-ant/readable-stream/asyncIterator\n```\n\nExample:\n\n```ts\nimport {\n  asyncIterator,\n  type ReadableStreamIteratorOptions,\n} from \"@sec-ant/readable-stream/asyncIterator\";\n// also with side effects\n```\n\n#### `fromAnyIterable`\n\nPath:\n\n```\n@sec-ant/readable-stream/fromAnyIterable\n```\n\nExample:\n\n```ts\nimport { fromAnyIterable } from \"@sec-ant/readable-stream/fromAnyIterable\";\n// also with side effects\n```\n\n#### All-in-One\n\nPath:\n\n```\n@sec-ant/readable-stream\n```\n\nExample:\n\n```ts\nimport {\n  fromAnyIterable,\n  asyncIterator,\n  type ReadableStreamIteratorOptions,\n} from \"@sec-ant/readable-stream\";\n// also with side effects\n```\n\n### Types\n\nYou can also use this package to augment the `ReadableStream` type for async iteration if the runtime already supports it but the type system does not.\n\nPath:\n\n```\n@sec-ant/readable-stream/async-iterator\n```\n\nExample:\n\n```ts\n/// <reference types=\"@sec-ant/readable-stream/async-iterator\" />\n```\n\n## License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2022 Ze-Zheng Wu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sec-ant/readable-stream/-/readable-stream-0.4.1.tgz#60de891bb126abfdc5410fdc6166aca065f10a0c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sec-ant/readable-stream/-/readable-stream-0.4.1.tgz",
    "hash": "60de891bb126abfdc5410fdc6166aca065f10a0c",
    "integrity": "sha512-831qok9r2t8AlxLko40y2ebgSDhenenCatLVeW/uBtnHPyhHOvG0C7TvfgecV+wHzIm5KUICgzmVpWS+IMEAeg==",
    "registry": "npm",
    "packageName": "@sec-ant/readable-stream",
    "cacheIntegrity": "sha512-831qok9r2t8AlxLko40y2ebgSDhenenCatLVeW/uBtnHPyhHOvG0C7TvfgecV+wHzIm5KUICgzmVpWS+IMEAeg== sha1-YN6JG7Emq/3FQQ/cYWasoGXxCgw="
  },
  "registry": "npm",
  "hash": "60de891bb126abfdc5410fdc6166aca065f10a0c"
}
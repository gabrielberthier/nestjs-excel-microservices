{
  "manifest": {
    "name": "@eslint/eslintrc",
    "version": "3.2.0",
    "description": "The legacy ESLintRC config file format for ESLint",
    "type": "module",
    "main": "./dist/eslintrc.cjs",
    "exports": {
      ".": {
        "import": "./lib/index.js",
        "require": "./dist/eslintrc.cjs"
      },
      "./package.json": "./package.json",
      "./universal": {
        "import": "./lib/index-universal.js",
        "require": "./dist/eslintrc-universal.cjs"
      }
    },
    "files": [
      "lib",
      "conf",
      "LICENSE",
      "dist",
      "universal.js"
    ],
    "publishConfig": {
      "access": "public"
    },
    "scripts": {
      "build": "rollup -c",
      "lint": "eslint . --report-unused-disable-directives",
      "lint:fix": "npm run lint -- --fix",
      "prepare": "npm run build",
      "release:generate:latest": "eslint-generate-release",
      "release:generate:alpha": "eslint-generate-prerelease alpha",
      "release:generate:beta": "eslint-generate-prerelease beta",
      "release:generate:rc": "eslint-generate-prerelease rc",
      "release:publish": "eslint-publish-release",
      "test": "mocha -R progress -c 'tests/lib/*.cjs' && c8 mocha -R progress -c 'tests/lib/**/*.js'"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/eslint/eslintrc.git"
    },
    "funding": "https://opencollective.com/eslint",
    "keywords": [
      "ESLint",
      "ESLintRC",
      "Configuration"
    ],
    "author": {
      "name": "Nicholas C. Zakas"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/eslint/eslintrc/issues"
    },
    "homepage": "https://github.com/eslint/eslintrc#readme",
    "devDependencies": {
      "c8": "^7.7.3",
      "chai": "^4.3.4",
      "eslint": "^7.31.0",
      "eslint-config-eslint": "^7.0.0",
      "eslint-plugin-jsdoc": "^35.4.1",
      "eslint-plugin-node": "^11.1.0",
      "eslint-release": "^3.2.0",
      "fs-teardown": "^0.1.3",
      "mocha": "^9.0.3",
      "rollup": "^2.70.1",
      "shelljs": "^0.8.5",
      "sinon": "^11.1.2",
      "temp-dir": "^2.0.0"
    },
    "dependencies": {
      "ajv": "^6.12.4",
      "debug": "^4.3.2",
      "espree": "^10.0.1",
      "globals": "^14.0.0",
      "ignore": "^5.2.0",
      "import-fresh": "^3.2.1",
      "js-yaml": "^4.1.0",
      "minimatch": "^3.1.2",
      "strip-json-comments": "^3.1.1"
    },
    "engines": {
      "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-@eslint-eslintrc-3.2.0-57470ac4e2e283a6bf76044d63281196e370542c-integrity/node_modules/@eslint/eslintrc/package.json",
    "readmeFilename": "README.md",
    "readme": "# ESLintRC Library\n\nThis repository contains the legacy ESLintRC configuration file format for ESLint. This package is not intended for use outside of the ESLint ecosystem. It is ESLint-specific and not intended for use in other programs.\n\n**Note:** This package is frozen except for critical bug fixes as ESLint moves to a new config system.\n\n## Installation\n\nYou can install the package as follows:\n\n```\nnpm install @eslint/eslintrc --save-dev\n\n# or\n\nyarn add @eslint/eslintrc -D\n```\n\n## Usage (ESM)\n\nThe primary class in this package is `FlatCompat`, which is a utility to translate ESLintRC-style configs into flat configs. Here's how you use it inside of your `eslint.config.js` file:\n\n```js\nimport { FlatCompat } from \"@eslint/eslintrc\";\nimport js from \"@eslint/js\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// mimic CommonJS variables -- not needed if using CommonJS\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst compat = new FlatCompat({\n    baseDirectory: __dirname,                  // optional; default: process.cwd()\n    resolvePluginsRelativeTo: __dirname,       // optional\n    recommendedConfig: js.configs.recommended, // optional unless you're using \"eslint:recommended\"\n    allConfig: js.configs.all,                 // optional unless you're using \"eslint:all\"\n});\n\nexport default [\n\n    // mimic ESLintRC-style extends\n    ...compat.extends(\"standard\", \"example\", \"plugin:react/recommended\"),\n\n    // mimic environments\n    ...compat.env({\n        es2020: true,\n        node: true\n    }),\n\n    // mimic plugins\n    ...compat.plugins(\"jsx-a11y\", \"react\"),\n\n    // translate an entire config\n    ...compat.config({\n        plugins: [\"jsx-a11y\", \"react\"],\n        extends: \"standard\",\n        env: {\n            es2020: true,\n            node: true\n        },\n        rules: {\n            semi: \"error\"\n        }\n    })\n];\n```\n\n## Usage (CommonJS)\n\nUsing `FlatCompat` in CommonJS files is similar to ESM, but you'll use `require()` and `module.exports` instead of `import` and `export`. Here's how you use it inside of your `eslint.config.js` CommonJS file:\n\n```js\nconst { FlatCompat } = require(\"@eslint/eslintrc\");\nconst js = require(\"@eslint/js\");\n\nconst compat = new FlatCompat({\n    baseDirectory: __dirname,                  // optional; default: process.cwd()\n    resolvePluginsRelativeTo: __dirname,       // optional\n    recommendedConfig: js.configs.recommended, // optional unless using \"eslint:recommended\"\n    allConfig: js.configs.all,                 // optional unless using \"eslint:all\"\n});\n\nmodule.exports = [\n\n    // mimic ESLintRC-style extends\n    ...compat.extends(\"standard\", \"example\", \"plugin:react/recommended\"),\n\n    // mimic environments\n    ...compat.env({\n        es2020: true,\n        node: true\n    }),\n\n    // mimic plugins\n    ...compat.plugins(\"jsx-a11y\", \"react\"),\n\n    // translate an entire config\n    ...compat.config({\n        plugins: [\"jsx-a11y\", \"react\"],\n        extends: \"standard\",\n        env: {\n            es2020: true,\n            node: true\n        },\n        rules: {\n            semi: \"error\"\n        }\n    })\n];\n```\n\n## Troubleshooting\n\n**TypeError: Missing parameter 'recommendedConfig' in FlatCompat constructor**\n\nThe `recommendedConfig` option is required when any config uses `eslint:recommended`, including any config in an `extends` clause. To fix this, follow the example above using `@eslint/js` to provide the `eslint:recommended` config.\n\n**TypeError: Missing parameter 'allConfig' in FlatCompat constructor**\n\nThe `allConfig` option is required when any config uses `eslint:all`, including any config in an `extends` clause. To fix this, follow the example above using `@eslint/js` to provide the `eslint:all` config.\n\n\n## License\n\nMIT License\n",
    "licenseText": "Copyright OpenJS Foundation and other contributors, <www.openjsf.org>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@eslint/eslintrc/-/eslintrc-3.2.0.tgz#57470ac4e2e283a6bf76044d63281196e370542c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@eslint/eslintrc/-/eslintrc-3.2.0.tgz",
    "hash": "57470ac4e2e283a6bf76044d63281196e370542c",
    "integrity": "sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==",
    "registry": "npm",
    "packageName": "@eslint/eslintrc",
    "cacheIntegrity": "sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w== sha1-V0cKxOLig6a/dgRNYygRluNwVCw="
  },
  "registry": "npm",
  "hash": "57470ac4e2e283a6bf76044d63281196e370542c"
}
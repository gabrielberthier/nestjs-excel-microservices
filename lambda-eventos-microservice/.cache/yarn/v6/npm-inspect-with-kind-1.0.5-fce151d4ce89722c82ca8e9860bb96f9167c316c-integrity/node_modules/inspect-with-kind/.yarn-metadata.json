{
  "manifest": {
    "name": "inspect-with-kind",
    "version": "1.0.5",
    "description": "`util.inspect` with additional type information",
    "repository": {
      "type": "git",
      "url": "https://github.com/shinnn/inspect-with-kind.git"
    },
    "author": {
      "name": "Shinnosuke Watanabe",
      "url": "https://github.com/shinnn"
    },
    "license": "ISC",
    "scripts": {
      "pretest": "eslint .",
      "test": "nyc --reporter=html --reporter=text node test.js"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "inspect",
      "format",
      "beautify",
      "clarify",
      "stringify",
      "type",
      "kind",
      "append",
      "additional",
      "info",
      "check"
    ],
    "dependencies": {
      "kind-of": "^6.0.2"
    },
    "devDependencies": {
      "@shinnn/eslint-config-node": "^6.0.0",
      "babel-eslint": "^9.0.0",
      "eslint": "^5.4.0",
      "nyc": "^13.0.1",
      "tape": "^4.9.1",
      "zen-observable": "^0.8.9"
    },
    "eslintConfig": {
      "extends": "@shinnn/node",
      "parser": "babel-eslint"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v6/npm-inspect-with-kind-1.0.5-fce151d4ce89722c82ca8e9860bb96f9167c316c-integrity/node_modules/inspect-with-kind/package.json",
    "readmeFilename": "README.md",
    "readme": "# inspect-with-kind\n\n[![npm version](https://img.shields.io/npm/v/inspect-with-kind.svg)](https://www.npmjs.com/package/inspect-with-kind)\n[![Build Status](https://travis-ci.org/shinnn/inspect-with-kind.svg?branch=master)](https://travis-ci.org/shinnn/inspect-with-kind)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/inspect-with-kind.svg)](https://coveralls.io/github/shinnn/inspect-with-kind?branch=master)\n\n[`util.inspect`][util.inspect] with additional type information\n\n```javascript\nconst {inspect} = require('util');\nconst inspectWithKind = require('inspect-with-kind');\n\ninspect([1, 2, 3]); //=> '[ 1, 2, 3 ]'\ninspectWithKind([1, 2, 3]); //=> '[ 1, 2, 3 ] (array)'\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install inspect-with-kind\n```\n\n## API\n\n```javascript\nconst inspectWithKind = require('inspect-with-kind');\n```\n\n### inspectWithKind(*value* [, *options*])\n\n*value*: any type  \n*options*: `Object` ([`util.inspect`][util.inspect] options)  \nReturn: `string`\n\nAlmost the same as `util.inspect`, but:\n\n* It appends a type information to the string if the first argument is one of `boolean`, `string`, `number`, `bigint`, `Array`, `RegExp`, `Date`, `arguments` or a plain `Object`.\n* Error stack trace is omitted.\n* `breakLength` option defaults to `Infinity`.\n* `maxArrayLength` option defaults to `10`.\n\n```javascript\nconst util = require('util');\nconst inspectWithKind = require('inspect-with-kind');\n\n// appends type info\nutil.inspect(1); //=> '1'\ninspectWithKind(1); //=> '1 (number)'\nutil.inspect('1'); //=> '\\'1\\''\ninspectWithKind('1'); //=> '\\'1\\' (string)'\n\n// doesn't appends type info, because <Buffer ...> clearly expresses what it is\nutil.inspect(Buffer.from('1')); //=> '<Buffer 31>'\ninspectWithKind(Buffer.from('1')); //=> '<Buffer 31>'\n\n// omits stack trace\nutil.inspect(new Error('error!')); //=> 'Error: error!\\n    at repl:1:14\\n    at ContextifyScript ...'\ninspectWithKind(new Error('error!')); //=> 'Error: error!'\n```\n\n## Example\n\nThis module is useful for making `TypeError` error messages in your Node.js library.\n\n```javascript\nconst inspectWithKind = require('inspect-with-kind');\n\nmodule.exports = function reverse(v) {\n  if (typeof v !== 'boolean') {\n    throw new TypeError(`Expected a Boolean value, but got ${inspectWithKind(v)}.`);\n  }\n\n  return !v;\n};\n```\n\n```javascript\nconst reverse = require('./reverse.js');\n\nreverse(/true/); // TypeError: Expected a Boolean value, but got /true/ (regexp).\n```\n\n## License\n\n[ISC License](./LICENSE) Â© 2017 Shinnosuke Watanabe\n\n[util.inspect]: https://nodejs.org/api/util.html#util_util_inspect_object_options\n",
    "licenseText": "ISC License (ISC)\nCopyright 2017 - 2018 Shinnosuke Watanabe\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/inspect-with-kind/-/inspect-with-kind-1.0.5.tgz#fce151d4ce89722c82ca8e9860bb96f9167c316c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/inspect-with-kind/-/inspect-with-kind-1.0.5.tgz",
    "hash": "fce151d4ce89722c82ca8e9860bb96f9167c316c",
    "integrity": "sha512-MAQUJuIo7Xqk8EVNP+6d3CKq9c80hi4tjIbIAT6lmGW9W6WzlHiu9PS8uSuUYU+Do+j1baiFp3H25XEVxDIG2g==",
    "registry": "npm",
    "packageName": "inspect-with-kind",
    "cacheIntegrity": "sha512-MAQUJuIo7Xqk8EVNP+6d3CKq9c80hi4tjIbIAT6lmGW9W6WzlHiu9PS8uSuUYU+Do+j1baiFp3H25XEVxDIG2g== sha1-/OFR1M6JciyCyo6YYLuW+RZ8MWw="
  },
  "registry": "npm",
  "hash": "fce151d4ce89722c82ca8e9860bb96f9167c316c"
}